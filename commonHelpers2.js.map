{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const localStorageKey = \"feedback-form-state\";\n\nconst valuesObject = {\n    email: \"\",\n    message: \"\",\n    updateEmail(value) {\n        this.email = value.trim();\n        this.saveToStorage();\n    },\n    updateMessage(value) {\n        this.message = value.trim();\n        this.saveToStorage();\n    },\n    getEmail() {\n        this.getFromStorage();\n        return this.email;\n    },\n    getMessage() {\n        this.getFromStorage();\n        return this.message;\n    },\n    reset() {\n        this.email = \"\";\n        this.message = \"\";\n        localStorage.removeItem(localStorageKey);\n    },\n    saveToStorage() {\n        localStorage.setItem(localStorageKey, JSON.stringify(this));\n    },\n    getFromStorage() {\n        const storagedString = localStorage.getItem(localStorageKey);\n        if (storagedString !== null) {\n            const storaged = JSON.parse(storagedString);\n            this.email = storaged.email;\n            this.message = storaged.message;\n        }\n    }\n}\n\nconst form = document.querySelector(\".feedback-form\");\nconst emailInput = form.elements.email;\nconst messageInput = form.elements.message;\n\nemailInput.value = valuesObject.getEmail();\nmessageInput.value = valuesObject.getMessage();\n\nform.addEventListener(\"input\", event => {\n    const value = event.target.value.trim();\n    if (event.target.name === \"email\") {\n        valuesObject.updateEmail(value);\n    } else if (event.target.name === \"message\") {\n    valuesObject.updateMessage(value);\n    }\n})\n\nform.addEventListener(\"submit\", event => {\n    event.preventDefault();\n    if (emailInput.value.trim() === \"\" || messageInput.value.trim() === \"\") {\n        alert('All form fields must be filled in!');\n        return;\n    }\n\n    console.log({\n        email: emailInput.value.trim(),\n        message: messageInput.value.trim(),\n    });\n    valuesObject.reset();\n    form.reset();\n})"],"names":["localStorageKey","valuesObject","value","storagedString","storaged","form","emailInput","messageInput","event"],"mappings":"oDAAA,MAAMA,EAAkB,sBAElBC,EAAe,CACjB,MAAO,GACP,QAAS,GACT,YAAYC,EAAO,CACf,KAAK,MAAQA,EAAM,OACnB,KAAK,cAAa,CACrB,EACD,cAAcA,EAAO,CACjB,KAAK,QAAUA,EAAM,OACrB,KAAK,cAAa,CACrB,EACD,UAAW,CACP,YAAK,eAAc,EACZ,KAAK,KACf,EACD,YAAa,CACT,YAAK,eAAc,EACZ,KAAK,OACf,EACD,OAAQ,CACJ,KAAK,MAAQ,GACb,KAAK,QAAU,GACf,aAAa,WAAWF,CAAe,CAC1C,EACD,eAAgB,CACZ,aAAa,QAAQA,EAAiB,KAAK,UAAU,IAAI,CAAC,CAC7D,EACD,gBAAiB,CACb,MAAMG,EAAiB,aAAa,QAAQH,CAAe,EAC3D,GAAIG,IAAmB,KAAM,CACzB,MAAMC,EAAW,KAAK,MAAMD,CAAc,EAC1C,KAAK,MAAQC,EAAS,MACtB,KAAK,QAAUA,EAAS,OAC3B,CACJ,CACL,EAEMC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAaD,EAAK,SAAS,MAC3BE,EAAeF,EAAK,SAAS,QAEnCC,EAAW,MAAQL,EAAa,WAChCM,EAAa,MAAQN,EAAa,aAElCI,EAAK,iBAAiB,QAASG,GAAS,CACpC,MAAMN,EAAQM,EAAM,OAAO,MAAM,KAAI,EACjCA,EAAM,OAAO,OAAS,QACtBP,EAAa,YAAYC,CAAK,EACvBM,EAAM,OAAO,OAAS,WACjCP,EAAa,cAAcC,CAAK,CAEpC,CAAC,EAEDG,EAAK,iBAAiB,SAAUG,GAAS,CAErC,GADAA,EAAM,eAAc,EAChBF,EAAW,MAAM,SAAW,IAAMC,EAAa,MAAM,KAAM,IAAK,GAAI,CACpE,MAAM,oCAAoC,EAC1C,MACH,CAED,QAAQ,IAAI,CACR,MAAOD,EAAW,MAAM,KAAM,EAC9B,QAASC,EAAa,MAAM,KAAM,CAC1C,CAAK,EACDN,EAAa,MAAK,EAClBI,EAAK,MAAK,CACd,CAAC"}